<?xml version="1.0"?>
<QALCULATE version="0.3">
  <builtin-function name="zeta" category="" title="Riemann Zeta" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="process" category="Utilities" title="Process components" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="csum" category="Utilities" title="Custom sum of components" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
    <argument index="4"></argument>
    <argument index="5"></argument>
  </builtin-function>
  <builtin-function name="function" category="Utilities" title="Function" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="matrix" category="Matrices" title="Construct Matrix" active="true">
    <description></description>
    <argument index="1">Rows</argument>
    <argument index="2">Columns</argument>
  </builtin-function>
  <builtin-function name="vector" category="Matrices" title="Construct Vector" active="true">
    <description></description>
  </builtin-function>
  <builtin-function name="elements" category="Matrices" title="Elements" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="sort" category="Matrices" title="Sort" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="rank" category="Matrices" title="Rank" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="matrix2vector" category="Matrices" title="Convert Matrix to Vector" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="row" category="Matrices" title="Extract Row as Vector" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
  </builtin-function>
  <builtin-function name="column" category="Matrices" title="Extract Column as Vector" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
  </builtin-function>
  <builtin-function name="rows" category="Matrices" title="Rows" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="columns" category="Matrices" title="Columns" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="element" category="Matrices" title="Element" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
    <argument index="3"></argument>
  </builtin-function>
  <builtin-function name="components" category="Matrices" title="Components" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="component" category="Matrices" title="Component" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
  </builtin-function>
  <builtin-function name="limits" category="Matrices" title="Limits" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
    <argument index="3"></argument>
  </builtin-function>
  <builtin-function name="transpose" category="Matrices" title="Transpose" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="identity" category="Matrices" title="Identity" active="true">
    <description></description>
  </builtin-function>
  <builtin-function name="det" category="Matrices" title="Determinant" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="cofactor" category="Matrices" title="Cofactor" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
    <argument index="3"></argument>
  </builtin-function>
  <builtin-function name="adj" category="Matrices" title="Adjoint" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="inverse" category="Matrices" title="Inverse" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="if" category="Logical" title="If...Then...Else" active="true">
    <description>Tests a condition and returns a value depending on the result.</description>
    <argument index="1">Condition (use &lt;, &lt;=, =, &lt;&gt;, =&gt; or &gt;)</argument>
    <argument index="2">Expression if condition met</argument>
    <argument index="3">Expression if condition NOT met</argument>
  </builtin-function>
  <builtin-function name="diff" category="Experimental" title="Differentiate" active="true">
    <description></description>
    <argument index="1">Expression</argument>
    <argument index="2">With respect to</argument>
  </builtin-function>
  <builtin-function name="days" category="Date &amp; Time" title="Days between two dates" active="false">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
    <argument index="3"></argument>
    <argument index="4"></argument>
  </builtin-function>
  <builtin-function name="yearfrac" category="Date &amp; Time" title="Years between two dates" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
    <argument index="3"></argument>
    <argument index="4"></argument>
  </builtin-function>
  <builtin-function name="gcd" category="Arithmetics" title="Greatest Common Divisor" active="true">
    <description></description>
    <argument index="1">1st Number</argument>
    <argument index="2">2nd Number</argument>
  </builtin-function>
  <builtin-function name="factorial" category="Arithmetics" title="Factorial" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="abs" category="Arithmetics" title="Absolute Value" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="ceil" category="Arithmetics" title="Round upwards" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="floor" category="Arithmetics" title="Round downwards" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="trunc" category="Arithmetics" title="Round towards zero" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="round" category="Arithmetics" title="Round" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="frac" category="Arithmetics" title="Extract fractional part" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="int" category="Arithmetics" title="Extract integer part" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="mod" category="Arithmetics" title="Reminder (mod)" active="true">
    <description></description>
    <argument index="1">Numerator</argument>
    <argument index="2">Denominator</argument>
  </builtin-function>
  <builtin-function name="rem" category="Arithmetics" title="Reminder (rem)" active="true">
    <description></description>
    <argument index="1">Numerator</argument>
    <argument index="2">Denominator</argument>
  </builtin-function>
  <builtin-function name="sin" category="Trigonometry" title="Sine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="cos" category="Trigonometry" title="Cosine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="tan" category="Trigonometry" title="Tangent" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="sinh" category="Trigonometry" title="Hyperbolic sine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="cosh" category="Trigonometry" title="Hyperbolic cosine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="tanh" category="Trigonometry" title="Hyperbolic tangent" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="asin" category="Trigonometry" title="Arcsine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="acos" category="Trigonometry" title="Arccosine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="atan" category="Trigonometry" title="Arctangent" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="asinh" category="Trigonometry" title="Hyperbolic arcsine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="acosh" category="Trigonometry" title="Hyperbolic arccosine" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="atanh" category="Trigonometry" title="Hyperbolic arctangent" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="ln" category="Exponents and Logarithms" title="Natural Logarithm" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="log2" category="Exponents and Logarithms" title="Base-2 Logarithm" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="log" category="Exponents and Logarithms" title="Base-10 Logarithm" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="exp" category="Exponents and Logarithms" title="e raised to the power X" active="true">
    <description></description>
    <argument index="1">Exponent</argument>
  </builtin-function>
  <builtin-function name="exp2" category="Exponents and Logarithms" title="2 raised the to power X" active="true">
    <description></description>
    <argument index="1">Exponent</argument>
  </builtin-function>
  <builtin-function name="exp10" category="Exponents and Logarithms" title="10 raised the to power X" active="true">
    <description></description>
    <argument index="1">Exponent</argument>
  </builtin-function>
  <builtin-function name="sqrt" category="Exponents and Logarithms" title="Square Root (abs)" active="true">
    <description></description>
    <argument index="1">Non-negative number</argument>
  </builtin-function>
  <builtin-function name="cbrt" category="Exponents and Logarithms" title="Cube Root" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="root" category="Exponents and Logarithms" title="Nth Root (abs)" active="true">
    <description></description>
    <argument index="1">Base</argument>
    <argument index="2">Exponent</argument>
  </builtin-function>
  <builtin-function name="pow" category="Exponents and Logarithms" title="Power (abs)" active="true">
    <description></description>
    <argument index="1">Base</argument>
    <argument index="2">Exponent</argument>
  </builtin-function>
  <builtin-function name="hypot" category="Geometry/Triangle" title="Hypotenuse" active="true">
    <description></description>
    <argument index="1">Side 1 of triangle</argument>
    <argument index="2">Side 2 of triangle</argument>
  </builtin-function>
  <builtin-function name="percentile" category="Statistics" title="Percentile" active="true">
    <description></description>
    <argument index="1"></argument>
    <argument index="2"></argument>
  </builtin-function>
  <builtin-function name="min" category="Statistics" title="Min" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="max" category="Statistics" title="Max" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="mode" category="Statistics" title="Mode" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <builtin-function name="rand" category="General" title="Random Number" active="true">
    <description>Generates a pseudo-random number between 0 and 1</description>
  </builtin-function>
  <builtin-function name="BASE" category="Number Bases" title="Number Base" active="true">
    <description>Returns a decimal integer from a number of specified base between 2 and 36</description>
    <argument index="1">Number</argument>
    <argument index="2">Base</argument>
  </builtin-function>
  <builtin-function name="BIN" category="Number Bases" title="Binary" active="true">
    <description>Returns a decimal integer from a binary number</description>
    <argument index="1">Binary number</argument>
  </builtin-function>
  <builtin-function name="OCT" category="Number Bases" title="Octal" active="true">
    <description>Returns a decimal integer from an octal number</description>
    <argument index="1">Octal number</argument>
  </builtin-function>
  <builtin-function name="HEX" category="Number Bases" title="Hexadecimal" active="true">
    <description>Returns a decimal value from a hexadecimal number</description>
    <argument index="1">Hexadecimal number</argument>
  </builtin-function>
  <builtin-function name="title" category="Utilities" title="Function Title" active="true">
    <description></description>
    <argument index="1"></argument>
  </builtin-function>
  <function name="circle" category="Geometry/Circle" title="Circle Area" active="true">
    <description>Calculates the area of a circle using the radius</description>
    <expression precise="true">\x^2*pi</expression>
    <argument type="free" index="1">Radius</argument>
  </function>
  <function name="circumference" category="Geometry/Circle" title="Circle Circumference" active="true">
    <description>Calculates the area of a circle using the diameter</description>
    <expression precise="true">\x*pi</expression>
    <argument type="free" index="1">Diameter</argument>
  </function>
  <function name="cylinder" category="Geometry/Cylinder" title="Cylinder Volume" active="true">
    <description></description>
    <expression precise="true">\x^2*pi*\y</expression>
  </function>
  <function name="cylinder_sa" category="Geometry/Cylinder" title="Surface Area of Cylinder" active="true">
    <description></description>
    <expression precise="true">2*(\x^2*pi)+2*pi*\x*\y</expression>
    <argument type="free" index="1">Radius</argument>
    <argument type="free" index="2">Height</argument>
  </function>
  <function name="cone" category="Geometry/Cone" title="Cone Volume" active="true">
    <description></description>
    <expression precise="true">\x^2*pi*\y/3</expression>
  </function>
  <function name="cone_sa" category="Geometry/Cone" title="Surface Area of Cone" active="true">
    <description></description>
    <expression precise="true">\x^2*pi+pi*\x*sqrt(\y^2+\x^2)</expression>
    <argument type="free" index="1">Radius</argument>
    <argument type="free" index="2">Height</argument>
  </function>
  <function name="sphere" category="Geometry/Sphere" title="Sphere Volume" active="true">
    <description></description>
    <expression precise="true">\x^3*pi*4/3</expression>
  </function>
  <function name="sphere_sa" category="Geometry/Sphere" title="Surface Area of Sphere" active="true">
    <description></description>
    <expression precise="true">\x^2*pi*4</expression>
    <argument type="free" index="1">Radius</argument>
  </function>
  <function name="square" category="Geometry/Square" title="Square Area" active="true">
    <description></description>
    <expression precise="true">\x^2</expression>
  </function>
  <function name="square_perimeter" category="Geometry/Square" title="Square Perimeter" active="true">
    <description></description>
    <expression precise="true">\x*4</expression>
    <argument type="free" index="1">Length of side</argument>
  </function>
  <function name="cube" category="Geometry/Cube" title="Cube Volume" active="true">
    <description></description>
    <expression precise="true">\x^3</expression>
  </function>
  <function name="cube_sa" category="Geometry/Cube" title="Surface Area of Cube" active="true">
    <description></description>
    <expression precise="true">(\x^2)*6</expression>
    <argument type="free" index="1">Length of side</argument>
  </function>
  <function name="rect" category="Geometry/Rectangle" title="Rectangle Area" active="true">
    <description></description>
    <expression precise="true">\x*\y</expression>
    <argument type="free" index="1">Length</argument>
    <argument type="free" index="2">Width</argument>
  </function>
  <function name="rect_perimeter" category="Geometry/Rectangle" title="Rectangle Perimeter" active="true">
    <description></description>
    <expression precise="true">(\x+\y)*2</expression>
    <argument type="free" index="1">Length</argument>
    <argument type="free" index="2">Width</argument>
  </function>
  <function name="rectprism" category="Geometry/Prism" title="Volume of Rectangular Prism" active="true">
    <description></description>
    <expression precise="true">\x*\y*\z</expression>
    <argument type="free" index="1">Length</argument>
    <argument type="free" index="2">Width</argument>
    <argument type="free" index="3">Height</argument>
  </function>
  <function name="rectprism_sa" category="Geometry/Prism" title="Surface Are of Rectangular Prism" active="true">
    <description></description>
    <expression precise="true">(\x*\y)*2+(\x*\z)*2+(\y*\z)*2</expression>
    <argument type="free" index="1">Length</argument>
    <argument type="free" index="2">Width</argument>
    <argument type="free" index="3">Height</argument>
  </function>
  <function name="pyramid" category="Geometry/Pyramid" title="Pyramid Volume" active="true">
    <description></description>
    <expression precise="true">\x*\y*\z/3</expression>
    <argument type="free" index="1">Length of base</argument>
    <argument type="free" index="2">Width of base</argument>
    <argument type="free" index="3">Height</argument>
  </function>
  <function name="triangle" category="Geometry/Triangle" title="Triangle Area" active="true">
    <description></description>
    <expression precise="true">(\x*\y)/2</expression>
    <argument type="free" index="1">Base</argument>
    <argument type="free" index="2">Height</argument>
  </function>
  <function name="triangle_perimeter" category="Geometry/Triangle" title="Triangle Perimeter" active="true">
    <description></description>
    <expression precise="true">\x+\y+hypot(\x,\y)</expression>
    <argument type="free" index="1">Base</argument>
    <argument type="free" index="2">Height</argument>
  </function>
  <function name="triangleprism" category="Geometry/Prism" title="Volume of Triangular Prism" active="true">
    <description></description>
    <expression precise="true">\x*\y*\z/2</expression>
    <argument type="free" index="1">Length</argument>
    <argument type="free" index="2">Width</argument>
    <argument type="free" index="3">Height</argument>
  </function>
  <function name="parallelogram" category="Geometry/Parallelogram" title="Parallelogram Area" active="true">
    <description></description>
    <expression precise="true">\x*\y</expression>
    <argument type="free" index="1">Base</argument>
    <argument type="free" index="2">Height</argument>
  </function>
  <function name="parallelogram_perimeter" category="Geometry/Parallelogram" title="Parallelogram Perimeter" active="true">
    <description></description>
    <expression precise="true">(\x+\y)*2</expression>
    <argument type="free" index="1">Side A</argument>
    <argument type="free" index="2">Side B</argument>
  </function>
  <function name="trapezoid" category="Geometry/Trapezoid" title="Trapezoid Area" active="true">
    <description></description>
    <expression precise="true">(\x+\y)/2*\z</expression>
    <argument type="free" index="1">Side A</argument>
    <argument type="free" index="2">Side B</argument>
    <argument type="free" index="3">Height</argument>
  </function>
  <function name="rad2deg" category="Trigonometry" title="Radians to Degrees" active="true">
    <description></description>
    <expression precise="true">\x*180/pi</expression>
    <argument type="free" index="1">Radians</argument>
  </function>
  <function name="deg2rad" category="Trigonometry" title="Degrees to Radians" active="true">
    <description></description>
    <expression precise="true">\x*pi/180</expression>
    <argument type="free" index="1">Degrees</argument>
  </function>
  <function name="rad2gra" category="Trigonometry" title="Radians to Gradians" active="true">
    <description></description>
    <expression precise="true">\x*200/pi</expression>
    <argument type="free" index="1">Radians</argument>
  </function>
  <function name="gra2rad" category="Trigonometry" title="Gradians to Radians" active="true">
    <description></description>
    <expression precise="true">\x*pi/200</expression>
    <argument type="free" index="1">Gradians</argument>
  </function>
  <function name="deg2gra" category="Trigonometry" title="Degrees to Gradians" active="true">
    <description></description>
    <expression precise="true">\x*400/360</expression>
    <argument type="free" index="1">Degrees</argument>
  </function>
  <function name="gra2deg" category="Trigonometry" title="Gradians to Degrees" active="true">
    <description></description>
    <expression precise="true">\x*360/400</expression>
    <argument type="free" index="1">Gradians</argument>
  </function>
  <function name="syd" category="Financial" title="Sum-of-years digits depreciation" active="true">
    <description>Calculates the sum-of-years digits depreciation for an asset based on its cost, salvage value, anticipated life, and a particular period. This method accelerates the rate of the depreciation, so that more depreciation expense occurs in earlier periods than in later ones. The depreciable cost is the actual cost minus the salvage value. The useful life is the number of periods (typically years) over which the asset is depreciated.</description>
    <expression precise="true">((\x-\y)*(\z-\a+1)*2)/(\z*(\z+1))</expression>
    <argument type="free" index="1">Cost</argument>
    <argument type="free" index="2">Salvage value</argument>
    <argument type="free" index="3">Life</argument>
    <argument type="free" index="4">Period</argument>
  </function>
  <function name="sln" category="Financial" title="Straight line depreciation" active="true">
    <description>Determines the straight line depreciation of an asset for a single period. \\Cost is the amount you paid for the asset. Salvage is the value of the asset at the end of the period. Life is the number of periods over which the asset is depreciated. SLN divides the cost evenly over the life of an asset.</description>
    <expression precise="true">(\x-\y)/\z</expression>
    <argument type="free" index="1">Cost</argument>
    <argument type="free" index="2">Salvage value</argument>
    <argument type="free" index="3">Life</argument>
  </function>
  <function name="pv" category="Financial" title="Present value" active="true">
    <description>Returns the present value of an investment.\\If type = 1 then the payment is made at the beginning of the period, If type = 0 (or omitted) it is made at the end of each period.</description>
    <expression precise="true">(-\A{0}-\z*(1+\x*\B{0})*(((1+\x)^\y-1)/\x))/((1+\x)^\y)</expression>
    <argument type="free" index="1">Interest rate</argument>
    <argument type="free" index="2">Number of periods</argument>
    <argument type="free" index="3">Payment made each period</argument>
    <argument type="free" index="4">Future value</argument>
    <argument type="boolean" index="5">Type</argument>
  </function>
  <function name="nominal" category="Financial" title="Nominal interest rate" active="true">
    <description>Calculates the nominal interest rate from a given effective interest rate compounded at given intervals.</description>
    <expression precise="true">\y*(abs((\x+1)^(1/\y))-1)</expression>
    <argument type="free" index="1">Effective interest rate</argument>
    <argument type="free" index="2">Periods</argument>
  </function>
  <function name="zero_coupon" category="Financial" title="Zero coupon" active="true">
    <description>Calculates the valucalculates the value of a zero-coupon (pure discount) bond.</description>
    <expression precise="true">\x/((1+\y)^\z)</expression>
    <argument type="free" index="1">Face value</argument>
    <argument type="free" index="2">Interest rate</argument>
    <argument type="free" index="3">Years</argument>
  </function>
  <function name="tbillyield" category="Financial" title="Treasury bill yield" active="true">
    <description>Returns the yield for a treasury bill.</description>
    <expression precise="true">(100-\z)/\z*(360/days(\x,\y,1,1))</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Price per $100 face value</argument>
  </function>
  <function name="tbillprice" category="Financial" title="Treasury bill price" active="true">
    <description>Returns the price per $100 value for a treasury bill.</description>
    <expression precise="true">100*(1-(\z*days(\x,\y,1,1))/360)</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Discount rate</argument>
  </function>
  <function name="tbilleq" category="Financial" title="Treasury bill equivalent" active="true">
    <description>Returns the bond equivalent for a treasury bill.</description>
    <expression precise="true">365*\z/(360-\z*days(\x,\y,1,1))</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Discount rate</argument>
  </function>
  <function name="ispmt" category="Financial" title="Interest paid on a given period of an investment (ISPMT)" active="true">
    <description>Calculates the interest paid on a given period of an investment.</description>
    <expression precise="true">(-\a*\x)-((-\a*\x)/\z*\y)</expression>
    <argument type="free" index="1">Periodic interest rate</argument>
    <argument type="integer" index="2">Amortizement period<min>1</min></argument>
    <argument type="integer" index="3">Number of periods<min>1</min></argument>
    <argument type="free" index="4">Present value</argument>
  </function>
  <function name="pmt" category="Financial" title="Payment for a loan" active="true">
    <description>Returns the amount of payment for a loan based on a constant interest rate and constant payments (each payment is equal amount).\\If type = 1 then the payment is made at the beginning of the period, If type = 0 (or omitted) it is made at the end of each period.</description>
    <expression precise="true">(-\z*((1+\x)^\y)-\A{0})/((1+\x*\B{0})*(((1+\x)^\y-1)/\x))</expression>
    <argument type="free" index="1">Rate</argument>
    <argument type="free" index="2">Number of periods</argument>
    <argument type="free" index="3">Present value</argument>
    <argument type="free" index="4">Future value</argument>
    <argument type="boolean" index="5">Type</argument>
  </function>
  <function name="nper" category="Financial" title="Periods of an investment" active="true">
    <description>Calculates number of periods of an investment based on periodic constant payments and a constant interest rate.\\Type defines the due date. 1 for payment at the beginning of a period and 0 (default) for payment at the end of a period.</description>
    <expression precise="true">ln((\y*(1+\x*\B{0})-\A{0}*\x)/(\z*\x+\y*(1+\x*\B)))/ln(1+\x)</expression>
    <argument type="free" index="1">Interest rate</argument>
    <argument type="free" index="2">Payment made each period</argument>
    <argument type="free" index="3">Present value</argument>
    <argument type="free" index="4">Future value</argument>
    <argument type="free" index="5">Type</argument>
  </function>
  <function name="duration" category="Financial" title="Duration" active="true">
    <description>Calculates the duration of a security.</description>
    <expression precise="true">0</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Annual coupon rate (%)</argument>
    <argument type="free" index="4">Annualized yield (%)</argument>
    <argument type="free" index="5">Frequency</argument>
    <argument type="integer" index="6">Day counting basis<min>0</min></argument>
  </function>
  <function name="g_duration" category="Financial" title="Periods for investment to attain desired value" active="true">
    <description>Returns the number of periods needed for an investment to attain a desired value.</description>
    <expression precise="true">ln(\z/\y)/ln(1+\x)</expression>
    <argument type="free" index="1">Rate</argument>
    <argument type="free" index="2">Present value</argument>
    <argument type="free" index="3">Future value</argument>
  </function>
  <function name="ppmt" category="Financial" title="Payment of an annuity going towards principal (PPMT)" active="true">
    <description>Calculates the amount of a payment of an annuity going towards principal.\\Type defines the due date. 1 for payment at the beginning of a period and 0 (default) for payment at the end of a period.</description>
    <expression precise="true">((-\a*(pow(1+\x,\z))-\B{0})/((1+\x*\C{0})*((pow(1+\x,\z)-1)/\x)))+(\a*pow(1+\x,(\y-1))+((-\a*(pow(1+\x,\z))-\B)/((1+\x*\C)*((pow(1+\x,\z)-1)/\x)))*((pow(1+\x,(\y-1))-1)/\x))*\x</expression>
    <argument type="free" index="1">Periodic interest rate</argument>
    <argument type="integer" index="2">Amortizement period<min>1</min></argument>
    <argument type="integer" index="3">Number of periods<min>1</min></argument>
    <argument type="free" index="4">Present value</argument>
    <argument type="free" index="5">Desired future value</argument>
    <argument type="boolean" index="6">Type</argument>
  </function>
  <function name="effect" category="Financial" title="Effective interest rate" active="true">
    <description>Calculates the effective interest for a given nominal rate.</description>
    <expression precise="true">(1+\x/\y)^\y-1</expression>
    <argument type="free" index="1">Nominal interest rate</argument>
    <argument type="free" index="2">Periods</argument>
  </function>
  <function name="fv" category="Financial" title="Future value" active="true">
    <description>Computes the future value of an investment. This is based on periodic, constant payments and a constant interest rate.\\If type = 1 then the payment is made at the beginning of the period, If type = 0 (or omitted) it is made at the end of each period.</description>
    <expression precise="true">-(\A{0}*((1+\x)^\y)+\z*(1+\x*\B{0})*(((1+\x)^\y-1)/\x))</expression>
    <argument type="free" index="1">Interest rate</argument>
    <argument type="free" index="2">Number of periods</argument>
    <argument type="free" index="3">Payment made each period</argument>
    <argument type="free" index="4">Present value</argument>
    <argument type="boolean" index="5">Type</argument>
  </function>
  <function name="countinuous" category="Financial" title="Return on continuously compounded interest" active="true">
    <description>Calculates the return on continuously compounded interest, given the principal, nominal rate and time in years.</description>
    <expression precise="true">\x*exp(\y*\z)</expression>
    <argument type="free" index="1">Principal</argument>
    <argument type="free" index="2">Interest rate</argument>
    <argument type="free" index="3">Years</argument>
  </function>
  <function name="compound" category="Financial" title="Compound" active="true">
    <description>Returns the value of an investment, given the principal, nominal interest rate, compounding frequency and time.</description>
    <expression precise="true">\x*(1+\y/\z)^(\z*\a)</expression>
    <argument type="free" index="1">Principal</argument>
    <argument type="free" index="2">Nominal Interest Rate</argument>
    <argument type="free" index="3">Periods per Year</argument>
    <argument type="free" index="4">Years</argument>
  </function>
  <function name="ipmt" category="Financial" title="Payment of an annuity going towards interest (IPMT)" active="true">
    <description>Calculates the amount of a payment of an annuity going towards interest.\\Type defines the due date. 1 for payment at the beginning of a period and 0 (default) for payment at the end of a period.</description>
    <expression precise="true">-(\a*pow(1+\x,(\y-1))+((-\a*(pow(1+\x,\z))-\B)/((1+\x*\C)*((pow(1+\x,\z)-1)/\x)))*((pow(1+\x,(\y-1))-1)/\x))*\x</expression>
    <argument type="free" index="1">Periodic interest rate</argument>
    <argument type="integer" index="2">Period<min>1</min></argument>
    <argument type="integer" index="3">Number of periods<min>1</min></argument>
    <argument type="free" index="4">Present value</argument>
    <argument type="free" index="5">Future value</argument>
    <argument type="boolean" index="6">Type</argument>
  </function>
  <function name="intrate" category="Financial" title="Interest rate for a fully invested security" active="true">
    <description>Returns the interest rate for a fully invested security. \\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">(\a-\z)/\z/yearfrac(\x,\y,\B{0},1)</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Investment</argument>
    <argument type="free" index="4">Redemption</argument>
    <argument type="integer" index="5">Day counting basis<min>0</min></argument>
  </function>
  <function name="dollarfr" category="Financial" title="Dollar fraction" active="true">
    <description>Converts a decimal dollar price into a dollar price expressed as a fraction.</description>
    <expression precise="true">int(\x)+frac(\x)*\y/10^ceil(log(\y))</expression>
    <argument type="free" index="1">Decimal dollar</argument>
    <argument type="integer" index="2">Denominator of fraction<min>1</min></argument>
  </function>
  <function name="dollarde" category="Financial" title="Dollar decimal" active="true">
    <description>Converts a dollar price expressed as a fraction into a dollar price expressed as a decimal number.</description>
    <expression precise="true">int(\x)+frac(\x)*10^ceil(log(\y))/\y</expression>
    <argument type="free" index="1">Fractional dollar</argument>
    <argument type="integer" index="2">Denominator of fraction<min>1</min></argument>
  </function>
  <function name="received" category="Financial" title="Amount received at maturity for a security bond" active="true">
    <description>Returns the amount received at the maturity date for a invested security. \\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365. The settlement date must be before maturity date.</description>
    <expression precise="true">\z/(1-\a*yearfrac(\x,\y,\B{0},1))</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Investment</argument>
    <argument type="free" index="4">Discount rate</argument>
    <argument type="integer" index="5">Day counting basis<min>0</min></argument>
  </function>
  <function name="disc" category="Financial" title="Discount rate for a security" active="true">
    <description>Returns the discount rate for a security. \\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">(\a-\z)/\a/yearfrac(\x,\y,\B{0},1))</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Price per $100 face value</argument>
    <argument type="free" index="4">Redemption</argument>
    <argument type="integer" index="5">Day counting basis<min>0</min></argument>
  </function>
  <function name="accrintm" category="Financial" title="Accrued interest of security paying at maturity" active="true">
    <description>Returns accrued interest for a security which pays interests at maturity date. \\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">\A{1000}*\z*yearfrac(\x,\y,\B{0},1)</expression>
    <argument type="date" index="1">Issue Date</argument>
    <argument type="date" index="2">Settlement Date</argument>
    <argument type="free" index="3">Annual rate of security</argument>
    <argument type="free" index="4">Par value</argument>
    <argument type="integer" index="5">Day counting basis<min>0</min></argument>
  </function>
  <function name="accrint" category="Financial" title="Accrued interest of security with periodic interest payments" active="true">
    <description>Returns accrued interest for a security which pays periodic interest. \\Allowed frequencies are 1 - annual, 2 - semi-annual or 4 - quarterly. Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">\b*\a/\c*\c*yearfrac(\x,\z,\D{0},1)+\y*0</expression>
    <argument type="date" index="1">Issue date</argument>
    <argument type="date" index="2">First interest</argument>
    <argument type="date" index="3">Settlement date</argument>
    <argument type="free" index="4">Annual rate of security</argument>
    <argument type="free" index="5">Par value</argument>
    <argument type="integer" index="6">Number of payments per year<min>1</min></argument>
    <argument type="integer" index="7">Day counting basis<min>0</min></argument>
  </function>
  <function name="coupnum" category="Financial" title="Number of coupons to be paid" active="true">
    <description>Returns the number of coupons to be paid between the settlement and the maturity. \\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">trunc(yearfrac(\x,\y,\A{0},1)*\z)</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="integer" index="3">Frequency<min>1</min></argument>
    <argument type="integer" index="4">Day counting basis<min>0</min></argument>
  </function>
  <function name="pricedisc" category="Financial" title="Price per $100 face value of a security bond" active="true">
    <description>Calculates and returns the price per $100 face value of a security bond. The security does not pay interest at maturity. \\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">\a-\z*\a*yearfrac(\x,\y,\B{0},1)</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="free" index="3">Discount</argument>
    <argument type="free" index="4">Redemption</argument>
    <argument type="integer" index="5">Day counting basis<min>0</min></argument>
  </function>
  <function name="pricemat" category="Financial" title="Price per $100 face value of a security" active="true">
    <description>Calculates and returns the price per $100 face value of a security. The security pays interest at maturity.\\Basis is the type of day counting you want to use: 0: US 30/360 (default), 1: real days, 2: real days/360, 3: real days/365 or 4: European 30/365.</description>
    <expression precise="true">(100+yearfrac(\z,\y,\C{0},1)*\a*100)/(1+yearfrac(\x,\y,\C,1)*\b)-yearfrac(\z,\x,\C,1)*\a*100</expression>
    <argument type="date" index="1">Settlement date</argument>
    <argument type="date" index="2">Maturity date</argument>
    <argument type="date" index="3">Issue date</argument>
    <argument type="free" index="4">Discount rate</argument>
    <argument type="free" index="5">Annual yield</argument>
    <argument type="integer" index="6">Day counting basis<min>0</min></argument>
  </function>
  <function name="level_coupon" category="Financial" title="Level-coupon bond" active="true">
    <description>Calculates the value of a level-coupon bond.</description>
    <expression precise="true">(\y*\x/\z)*((1-1/(((1+(\b/\z))^(\a*\z))))/(\b/\z))+(\x/((1+(\b/\z))^(\a*\z)))</expression>
    <argument type="free" index="1">Face value</argument>
    <argument type="free" index="2">Coupon rate</argument>
    <argument type="free" index="3">Coupons per year</argument>
    <argument type="free" index="4">Years</argument>
    <argument type="free" index="5">Market interest rate</argument>
  </function>
  <function name="sqrtpi" category="Exponents and Logarithms" title="Square Root (x * pi)" active="true">
    <description>Returns the non-negative square root of x * pi</description>
    <expression precise="true">sqrt(\x*pi)</expression>
    <argument type="number" index="1">Non-negative value<min include-equals="true">0</min></argument>
  </function>
  <function name="logn" category="Exponents and Logarithms" title="Base N Logrithm" active="true">
    <description>Returns the base n logarithm.</description>
    <expression precise="true">ln(\x)/ln(\y)</expression>
    <argument type="free" index="1">Value</argument>
    <argument type="number" index="2">Base<min include-equals="false">0</min></argument>
  </function>
  <function name="range" category="Statistics" title="Range" active="true">
    <description></description>
    <expression precise="true">max(\v)-min(\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="mean" category="Statistics" title="Mean" active="true">
    <description></description>
    <expression precise="true">sum(\v)/elements(\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="harmmean" category="Statistics" title="Harmonic Mean" active="true">
    <description></description>
    <expression precise="true">elements(\v)/csum(1,-1,0,&quot;\\y+1/\\x&quot;,\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="geomean" category="Statistics" title="Geometric Mean" active="true">
    <description></description>
    <expression precise="true">root(csum(1,-1,1,&quot;\\y*\\x&quot;,\v), elements(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="trimmean" category="Statistics" title="Trimmed Mean" active="true">
    <description></description>
    <expression precise="true">mean(limits(round(elements(\v)/100*\x),round(elements(\v)/100*(100-\x)),sort(\v)))</expression>
    <argument type="free" index="1">Trimmed percentage</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="winsormean" category="Statistics" title="Winsorized Mean" active="true">
    <description></description>
    <expression precise="true">mean(limits(1,round(elements(\v)/100*\x),sort(\v)),limits(round(elements(\v)/100*\x),round(elements(\v)/100*(100-\x)),sort(\v)),limits(round(elements(\v)/100*(100-\x)),-1,sort(\v)))</expression>
    <argument type="free" index="1">Trimmed percentage</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="median" category="Statistics" title="Median" active="true">
    <description></description>
    <expression precise="true">percentile(50,\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="quartile" category="Statistics" title="Quartile" active="true">
    <description></description>
    <expression precise="true">percentile(25*\x,\v)</expression>
    <argument type="integer" index="1">Quartile<min>1</min></argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="decile" category="Statistics" title="Decile" active="true">
    <description></description>
    <expression precise="true">percentile(10*\x,\v)</expression>
    <argument type="number" index="1">Decile<min include-equals="false">0</min></argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="iqr" category="Statistics" title="Interquartile Range" active="true">
    <description></description>
    <expression precise="true">quartile(3,\v)-quartile(1,\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="rms" category="Statistics" title="Quadratic Mean (RMS)" active="true">
    <description></description>
    <expression precise="true">sqrt(csum(1,-1,0,&quot;\\y+\\x^2&quot;,\v)/elements(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="sum" category="Statistics" title="Sum" active="true">
    <description></description>
    <expression precise="true">csum(1,-1,0,&quot;\\y+\\x&quot;,\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="number" category="Statistics" title="Number" active="true">
    <description></description>
    <expression precise="true">elements(\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="stdevp" category="Statistics" title="Standard Deviation (entire population)" active="true">
    <description></description>
    <expression precise="true">sqrt(csum(1,-1,0,&quot;\\y+(\\x-mean(\v))^2&quot;,\v)/elements(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="stdev" category="Statistics" title="Standard Deviation (random sampling)" active="true">
    <description></description>
    <expression precise="true">sqrt(csum(1,-1,0,&quot;\\y+(\\x-mean(\v))^2&quot;,\v)/(elements(\v)-1))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="varp" category="Statistics" title="Variance (entire population)" active="true">
    <description></description>
    <expression precise="true">csum(1,-1,0,&quot;\\y+(\\x-mean(\v))^2&quot;,\v)/elements(\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="var" category="Statistics" title="Variance (random sampling)" active="true">
    <description></description>
    <expression precise="true">csum(1,-1,0,&quot;\\y+(\\x-mean(\v))^2&quot;,\v)/(elements(\v)-1)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="stderr" category="Statistics" title="Standard Error" active="true">
    <description></description>
    <expression precise="true">sqrt(var(\v)/elements(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="meandev" category="Statistics" title="Mean Deviation" active="true">
    <description></description>
    <expression precise="true">csum(1,-1,0,&quot;\\y+abs(\\x-mean(\v))&quot;,\v)/elements(\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="durbinwatson" category="Statistics" title="Durbin-Watson" active="false">
    <description></description>
    <expression precise="false">csum(2,-1,0,&quot;\\y+(\\x-\\x_(\\i-1))^2&quot;,0,\v)/csum(1,-1,0,&quot;\\y+\\x^2&quot;,\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
  </function>
  <function name="pearson" category="Statistics" title="Pearson Correlation" active="true">
    <description></description>
    <expression precise="true">(\x*\v-sum(\x)*sum(\v)/elements(\x))/sqrt((\x*\x-(sum(\x)^2)/elements(\x))*(\v*\v-(sum(\v)^2)/elements(\v)))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="spearman" category="Statistics" title="Spearman's Rho" active="true">
    <description></description>
    <expression precise="true">pearson(rank(\x),rank(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="covar" category="Statistics" title="Covariance" active="true">
    <description></description>
    <expression precise="true">csum(1,min(elements(\x),elements(\v)),0,&quot;\\y+(\\x-mean(\x))*(\\x_(\\i+elements(\x))-mean(\v))&quot;,\x,\v)/min(elements(\x),elements(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="cor" category="Statistics" title="Statistical Correlation" active="true">
    <description></description>
    <expression precise="true">covar(\x,\v)/(stdev(\x)*stdev(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="correl" category="Statistics" title="Correlation Coefficient" active="true">
    <description></description>
    <expression precise="true">pearson(\x,\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="poolvar" category="Statistics" title="Pooled Variance" active="true">
    <description></description>
    <expression precise="true">(csum(1,-1,0,&quot;\\y+(\\x-mean(\x))^2&quot;,\x)+csum(1,-1,0,&quot;\\y+(\\x-mean(\v))^2&quot;,\v))/(elements(\x)+elements(\v)-2)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="weighmean" category="Statistics" title="Weighted Mean" active="true">
    <description></description>
    <expression precise="true">csum(1,min(elements(\x),elements(\v)),0,&quot;\\y+\\x*\\x_(\\i+elements(\x))&quot;,\x,\v)/sum(limits(1,min(elements(\x),elements(\v)),\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Weights</argument>
  </function>
  <function name="ttest" category="Statistics" title="Unpaired T-Test" active="true">
    <description></description>
    <expression precise="true">(mean(\x)-mean(\v))/sqrt((poolvar(\x,\v)^2)/elements(\x)+(poolvar(\x,\v)^2)/elements(\v))</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="pttest" category="Statistics" title="Paired T-Test" active="true">
    <description></description>
    <expression precise="true">mean(\x-\v)/stderr(\x-\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Data 1</argument>
    <argument type="vector" index="2" test="false" matrix-allowed="true">Data 2</argument>
  </function>
  <function name="norm" category="Matrices" title="Norm (length)" active="true">
    <description></description>
    <expression precise="true">sqrt(\v*\v)</expression>
    <argument type="vector" index="1" test="false" matrix-allowed="true">Vector</argument>
  </function>
  <function name="rayleigh" category="Statistics" title="Rayleigh distribution" active="true">
    <description>Returns the probability density p(x) at x for a Rayleigh distribution with scale parameter sigma. (from Gnumeric)</description>
    <expression precise="true">if(&quot;\x &lt; 0&quot;,&quot;0&quot;,&quot;(\x/\y)/\y*exp(-(\x/\y)*(\x/\y)/2)&quot;)</expression>
    <argument type="free" index="1">X</argument>
    <argument type="number" index="2">Sigma<min include-equals="false">0</min></argument>
  </function>
  <function name="rayleightail" category="Statistics" title="Rayleigh tail distribution" active="true">
    <description>Returns the probability density p(x) at x for a Rayleigh tail distribution with scale parameter sigma and a lower limit. (from Gnumeric)</description>
    <expression precise="true">if(&quot;\x &lt; \y&quot;,&quot;0&quot;,&quot;(\x/\z)/\z*exp(((\y/\z)+(\x/\z))*((\y/\z)-(\x/\z))/2)&quot;)</expression>
    <argument type="free" index="1">X</argument>
    <argument type="free" index="2">Lower limit</argument>
    <argument type="number" index="3">Sigma<min include-equals="false">0</min></argument>
  </function>
  <function name="pareto" category="Statistics" title="Pareto distribution" active="true">
    <description>Returns the probability density p(x) at x for a Pareto distribution with exponent and scale. (from Gnumeric)</description>
    <expression precise="true">if(&quot;\x &lt; \z&quot;,&quot;0&quot;,&quot;(\y/\z)/(\x/\z)^(\y+1)&quot;)</expression>
    <argument type="free" index="1">X</argument>
    <argument type="number" index="2">Exponent<min include-equals="false">0</min></argument>
    <argument type="number" index="3">Scale<min include-equals="false">0</min></argument>
  </function>
  <function name="logistic" category="Statistics" title="Logistic distribution" active="true">
    <description>Returns the probability density p(x) at x for a logistic distribution with scale parameter. (from Gnumeric)</description>
    <expression precise="true">exp(-abs(\x)/\y)/(abs(\y)*(1+exp(-abs(\x)/\y))^2)</expression>
    <argument type="free" index="1">X</argument>
    <argument type="number" index="2">Scale<min include-equals="false">0</min></argument>
  </function>
</QALCULATE>
